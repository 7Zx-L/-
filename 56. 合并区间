# https://leetcode.cn/problems/merge-intervals/description/
class Solution:
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
        intervals.sort(key=lambda x:x[0])
        right = intervals[0][1]
        result = []
        if len(intervals) == 1:
            result.append(intervals[0])
        for i in range(1, len(intervals)):
            if intervals[i][0] > right:
                result.append(intervals[i - 1])
            else:
                intervals[i][1] = max(intervals[i][1], intervals[i - 1][1])
                intervals[i][0] = min(intervals[i][0], intervals[i - 1][0])
            right = intervals[i][1]
            if i == len(intervals) - 1:
                result.append(intervals[i])
        return result

# 解法二
class Solution:
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
        intervals.sort(key=lambda x:x[0])
        result = [intervals[0]]
        for i in range(1, len(intervals)):
            if result[-1][1] >= intervals[i][0]:
                result[-1][1] = max(result[-1][1], intervals[i][1])
            else:
                result.append(intervals[i])
        return result
