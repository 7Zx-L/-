# https://leetcode.cn/problems/delete-operation-for-two-strings/description/
class Solution:
    def minDistance(self, word1: str, word2: str) -> int:
        # 本质是求最长相同子串，总长度减去两倍的最长相同子串长度就是要删除的元素
        # dp[i][j]表示 word1 截至 i - 1, word2 截至 j - 1 的最长相同子串长度为 dp[i][j] 
        dp = [[0] * (len(word2) + 1) for _ in range(len(word1) + 1)]
        for i in range(1, len(word1) + 1):
            for j in range(1, len(word2) + 1):
                if word1[i - 1] == word2[j - 1]:
                    dp[i][j] = dp[i - 1][j - 1] + 1
                else:
                    dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])
        return len(word1) + len(word2) - 2 * dp[-1][-1]
