# https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/description/
class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        income = 0
        for i in range(1, len(prices)):
            income += max(0, prices[i] - prices[i - 1])
        return income
# 动态规划解法
class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        dp =[[0, 0] for _ in range(len(prices))]
        dp[0][0] = -prices[0]
        dp[0][1] = 0
        # dp[i][0]表示第 i 天持有股票的最大现金，dp[i][1]表示第 i 天不持有股票的最大现金
        for i in range(1, len(prices)):
            dp[i][0] = max(dp[i - 1][0], dp[i - 1][1] - prices[i])
            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0] + prices[i])
        return dp[-1][1]
