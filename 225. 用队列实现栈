# https://leetcode.cn/problems/implement-stack-using-queues/description/
from collections import deque
class MyStack:

    def __init__(self):
        self.queue_1 = deque()
        self.queue_2 = deque()
    def push(self, x: int) -> None:
        self.queue_1.append(x)
    def pop(self) -> int:
        if self.empty():
            return None
        for i in range(len(self.queue_1) - 1):
            self.queue_2.append(self.queue_1.popleft())
        self.queue_1, self.queue_2 = self.queue_2, self.queue_1
        return self.queue_2.popleft()
    def top(self) -> int:
        res = self.pop()
        self.queue_1.append(res)
        return res
    def empty(self) -> bool:
        return not(self.queue_1 or self.queue_2)


# Your MyStack object will be instantiated and called as such:
# obj = MyStack()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.top()
# param_4 = obj.empty()
