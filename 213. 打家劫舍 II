# https://leetcode.cn/problems/house-robber-ii/description/
class Solution:
    def rob(self, nums: List[int]) -> int:
        if len(nums) == 1:
            return nums[0]
        # cur表示考虑当前的房子时，截至上一间房子能偷的最大价值，pre是上两间的
        cur_1 = pre_1 = 0
        # 不考虑首间考虑尾间
        for i in range(1, len(nums)):
            temp = cur_1
            cur_1 = max(pre_1 + nums[i], cur_1)
            pre_1 = temp
        cur_2 = pre_2 = 0
        # 考虑首间不考虑尾间
        for i in range(len(nums) - 1):
            temp = cur_2
            cur_2 = max(pre_2 + nums[i], cur_2)
            pre_2 = temp
        return max(cur_1, cur_2)
