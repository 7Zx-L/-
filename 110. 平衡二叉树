# https://leetcode.cn/problems/balanced-binary-tree/description/
# 递归法
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        return self.depth(root) != -1
    def depth(self, node) -> bool:
        if not node:
            return 0
        left = self.depth(node.left)
        right = self.depth(node.right)
        height_dif = abs(left - right)
        if left == -1 or right == -1 or height_dif > 1:
            return -1
        else:
            return max(left, right) + 1
