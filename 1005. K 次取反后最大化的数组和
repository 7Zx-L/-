# https://leetcode.cn/problems/maximize-sum-of-array-after-k-negations/description/
class Solution:
    def largestSumAfterKNegations(self, nums: List[int], k: int) -> int:
        nums.sort()
        sum_ = 0
        i = 0
        while k > 0 and i <= len(nums) - 1 and nums[i] < 0:
            nums[i] = -nums[i]
            k -= 1
            i += 1
        nums.sort()
        if k == 0:
            sum_ = sum(nums)
        else:
            if k % 2 == 0:
                sum_ = sum(nums)
            else:
                sum_ = sum(nums[1:]) - nums[0]    
        return sum_


# lambdaå‡½æ•°
class Solution:
    def largestSumAfterKNegations(self, nums: List[int], k: int) -> int:
        nums.sort(key=lambda x:abs(x), reverse=True)
        for i in range(len(nums)):
            if nums[i] < 0 and k > 0:
                nums[i] *= -1
                k -= 1
        if k % 2 == 1:
            nums[-1] *= -1
        return sum(nums)
