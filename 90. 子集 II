# https://leetcode.cn/problems/subsets-ii/description/
class Solution:
    def __init__(self):
        self.result = []
        self.path = []
    def backtracking(self, nums, start):
        self.result.append(self.path[:])
        for i in range(start, len(nums)):
            if nums[i] == nums[i - 1] and i > start:
                continue
            self.path.append(nums[i])
            self.backtracking(nums, i + 1)
            self.path.pop()
    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:
        nums.sort()
        self.backtracking(nums, 0)
        return self.result
