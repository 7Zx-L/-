# https://leetcode.cn/problems/maximum-subarray/description/
class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        count = 0
        result = float('-inf')
        for i in range(len(nums)):
            count += nums[i]
            if count > result:
                result = count
            if count < 0:
                count = 0
        return result
# 动态规划
class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        # dp[i]表示以下标i结尾的子数组的最大和是dp[i]
        dp = [0] * len(nums)
        dp[0] = nums[0]
        for i in range(1, len(nums)):
            dp[i] = nums[i]
            if dp[i - 1] <= 0:
                continue
            else:
                dp[i] = dp[i - 1] + nums[i]
        return max(dp)
