# https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons/description/
class Solution:
    def findMinArrowShots(self, points: List[List[int]]) -> int:
        if not points:
            return 0
        points.sort(key=lambda x:x[0])
        num = 1
        for i in range(1, len(points)):
            if points[i][0] > points[i - 1][1]:
                num += 1
            else:
                points[i][1] = min(points[i - 1][1], points[i][1])
        return num

# 不改变原数组的写法
class Solution:
    def findMinArrowShots(self, points: List[List[int]]) -> int:
        points.sort(key = lambda x: x[0])
        left,right = points[0][0],points[0][1]
        count = 1
        for point in points:
            if point[0]>right:
                count+=1
                left, right = point[0],point[1]
            else:
                right = min(right,point[1])
        return count
