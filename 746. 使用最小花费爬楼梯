# https://leetcode.cn/problems/min-cost-climbing-stairs/
class Solution:
    def minCostClimbingStairs(self, cost: List[int]) -> int:
        # dp[n] 表示到达n层需要的最小花费 依据题意 dp[0] = dp[1] = 0，且第n层花费只与n - 1或者n - 2层有关
        dp = [0] * (len(cost) + 1)
        dp[0] = dp[1] = 0
        for i in range(2, len(cost) + 1):
            dp[i] = min(dp[i - 1] + cost[i - 1], dp[i - 2] + cost[i - 2])
        return dp[-1]
