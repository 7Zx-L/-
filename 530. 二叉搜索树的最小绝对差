# https://leetcode.cn/problems/minimum-absolute-difference-in-bst/description/
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def __init__(self):
        self.record = []
    def getMinimumDifference(self, root: Optional[TreeNode]) -> int:
        self.traverse(root)
        min_val = float('inf')
        for i in range(1, len(self.record)):
            min_val = min(min_val, self.record[i] - self.record[i - 1])
        return min_val
    def traverse(self, node):
        if not node:
            return None
        self.traverse(node.left)
        self.record.append(node.val)
        self.traverse(node.right)
